# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Deployments
on:
  workflow_dispatch:
    inputs:
      deployAndroid:
        required: true
        default: "true"
      deployIOs:
        required: true
        default: "true"

permissions:
  contents: read

jobs:
  deploy-Android:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deployAndroid == 'true' }}
    name: Deploy Android
    steps:
      - name: Download Android artefacts
        uses: dawidd6/action-download-artifact@v4
        with:
          github_token: ${{secrets.GITNUGET}}
          workflow: android.yml
          workflow_conclusion: success
          branch: development
          path: artifact
      - name: Deploy to PlayConsole
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: "${{secrets.SERVICE_ACCOUNT_JSON }}"
          packageName: de.hdbw.apollo.client
          releaseFiles: artifact/apollo-android-app/de.hdbw.apollo.client-Signed.aab
          track: internal
          status: draft
          inAppUpdatePriority: 0
  deploy-IOs:
      runs-on: macos-12
      if: ${{ github.event.inputs.deployIOs == 'true' }}
      name: Deploy IOs
      steps:
      - name: Download iOS artefacts
        uses: dawidd6/action-download-artifact@v4
        with:
          github_token: ${{secrets.GITNUGET}}
          workflow: ios.yml
          workflow_conclusion: success
          branch: development
          path: artifact
      - name: Install private API key P8
        env:
          PRIVATE_API_KEY_BASE64: ${{ secrets.APPSTORE_API_PRIVATE_KEY_BASE64 }}
          API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
        run: | 
          mkdir -p ~/private_keys
          echo -n "$PRIVATE_API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_$API_KEY.p8

      - name: Upload app to TestFlight
        env:
          API_KEY: ${{ secrets.APPSTORE_API_KEY_ID }}
          API_ISSUER : ${{ secrets.APPSTORE_ISSUER_ID  }}
        run: |
          xcrun altool --validate-app -f artifact/apollo-ios-app/publish/De.HDBW.Apollo.Client.ipa -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER
          xcrun altool --output-format xml --upload-app -f artifact/apollo-ios-app/publish/De.HDBW.Apollo.Client.ipa -t ios --apiKey $API_KEY --apiIssuer $API_ISSUER
